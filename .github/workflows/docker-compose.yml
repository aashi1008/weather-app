name: Docker Compose CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Go (optional, but recommended)
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.7'

      # Step 3: Create .env files
      - name: Create .env files
        run: |
          echo "WEATHER_API_URL=https://api.open-meteo.com/v1/forecast" > .env
          echo "PORT=8080" >> .env

      # Step 4: Verify files exist
      - name: Verify files
        run: |
          ls -la
          echo "--- docker-compose.yml content ---"
          cat docker-compose.yml
          echo "--- Dockerfile content ---"
          head -5 Dockerfile

      # Step 5: Build Docker images
      - name: Build Docker images
        run: make build-docker
      
      # Step 6: Start containers
      - name: Start Docker containers
        run: make up

      # Step 7: Wait for services to be ready
      - name: Wait for services
        run: sleep 15

      # Step 8: Check container status
      - name: Wait for container and check status
        run: |
          echo "Waiting for container to be ready..."
          sleep 5
          
          echo "=== Container Status ==="
          docker ps
          
          echo "=== Container Logs (last 20 lines) ==="
          docker logs --tail=20 weather-app
          
          echo "=== Container Inspect ==="
          docker inspect weather-app --format='{{.State.Status}}' --format='{{.State.Health.Status}}' || true
        timeout-minutes: 2

      # Step 9: Test weather API endpoint
      - name: Test weather API endpoint
        run: |
          curl -f -X POST http://localhost:8080/weather \
            -H "Content-Type: application/json" \
            -d '{"lat":"53.5","lon":"9.9"}' || (echo "Weather API test failed" && make logs && exit 1)
      # Step 10: Run tests inside container
      - name: Run tests in Docker
        run: make test-docker

      # Step 11: Run tests with coverage
      - name: Run tests with coverage
        run: |
          docker exec weather-app go test -v ./tests/... -cover || (echo "Tests failed" && make logs && exit 1)
      
      # Step 14: Clean up Docker environment
      - name: Clean up
        if: always()
        run: |
          make logs || true
          make clean || true
      # Step 15: Upload logs as artifacts (on failure)
      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs
          path: |
            docker-logs.txt
          retention-days: 7
